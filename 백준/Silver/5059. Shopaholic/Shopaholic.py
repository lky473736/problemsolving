'''
**문제 설명 (번역):**

린지는 쇼핑 중독자입니다. "세 개의 물건을 사면, 그중 두 개의 가격만 내면 된다"라는 할인 이벤트가 있을 때마다 린지는 모든 물건을 사고 싶어합니다. 당신은 그녀의 쇼핑 습관을 고치는 것은 포기했지만, 그녀의 지출을 최소화하려고 합니다.

이 할인 이벤트는 항상 가장 저렴한 물건이 무료라는 특징이 있습니다. 예를 들어, 린지가 400, 350, 300, 250, 200, 150, 100 달러짜리 물건 7개를 가지고 계산대에 간다면, 그녀는 총 1500달러를 내야 합니다. 이 경우, 그녀는 250달러 할인을 받습니다. 그러나 린지가 물건을 세 번에 나눠서 계산하면, 더 큰 할인을 받을 수도 있습니다. 예를 들어, 400, 300, 250달러짜리 물건을 첫 번째로 계산할 때 250달러의 할인을 받습니다. 다음으로 150달러짜리 물건만 계산하면 추가 할인이 없지만, 마지막으로 350, 200, 100달러짜리 물건을 계산할 때 100달러의 할인을 받아 총 350달러의 할인을 받게 됩니다.

당신의 목표는 린지가 받을 수 있는 최대 할인을 구하는 것입니다.

**입력 형식**

첫 번째 줄에는 테스트 케이스의 수 \( t \)가 주어집니다. \( 1 \leq t \leq 20 \)

각 테스트 케이스는 두 줄로 구성됩니다.
- 첫 번째 줄에는 린지가 구매하려는 물건의 수 \( n \)이 주어집니다. \( 1 \leq n \leq 20000 \)
- 두 번째 줄에는 각 물건의 가격 \( p_i \)가 주어집니다. \( 1 \leq p_i \leq 20000 \)

**출력 형식**

각 테스트 케이스에 대해 린지가 받을 수 있는 최대 할인을 한 줄에 출력합니다.

**예제 입력**
```
1
6
400 100 200 350 300 250
```

**예제 출력**
```
400
```
'''

import sys

t = int(sys.stdin.readline())

for _ in range (t) :
    n = int(sys.stdin.readline())
    prices = list(map(int, sys.stdin.readline().split()))
    
    prices.sort(reverse=True)
    
    rst = 0
    for i in range (n//3) :
        rst += prices[3*i+2]
        
    print (rst)